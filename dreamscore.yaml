openapi: "3.0.2"
info:
  title: DreamScore API
  description: The DreamScore API is an OpenAPI specification that provides a detailed description of a soccer league management system. It includes endpoints for managing users, seasons, leagues, players, and transfers.
  license:
    name: All rights reserved
    url: https://github.com/dreamscore-oss/openapi/blob/main/LICENSE.md
  version: "1.0.0"
servers:
  - url: https://api.dreamscore.com/{basePath}
    description: DreamScore API
    variables:
      basePath:
        default: v1

tags:
  - name: /users
    description: Operations related to the users
  - name: /clubs
    description: Operations related to the clubs
  - name: /seasons
    description: Operations related to the seasons
  - name: /leagues
    description: Operations related to the leagues
  - name: /leagues/users
    description: Operations related to the users in the leagues
  - name: /leagues/players
    description: Operations related to the players
  - name: /leagues/transfers
    description: Operations related to the transfers
  - name: /leagues/transfers/offers
    description: Operations related to the offers for the transfers

paths:
  /users:
    post:
      tags:
        - /users
      summary: Create a new user
      responses:
        "201":
          description: The user was created successfully
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    format: int64
                    description: The ID of the user

  /users/{userId}:
    get:
      tags:
        - /users
      summary: Get the user details
      parameters:
        - $ref: "#/components/parameters/userIdPath"
      responses:
        "200":
          description: The details of the user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
    patch:
      tags:
        - /users
      summary: Update the user details
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user"
      responses:
        "204":
          description: The user was updated successfully

  /seasons/{seasonId}/clubs:
    get:
      tags:
        - /seasons
      summary: List of clubs on a specific matchday
      description: Returns the calculated points for each club from the first matchday of the season up to and including the specified matchday.
      parameters:
        - $ref: "#/components/parameters/seasonIdPath"
        - $ref: "#/components/parameters/matchdayIdQuery"
      responses:
        "200":
          description: List of clubs
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/clubPreview"

  /seasons/{seasonId}/players:
    get:
      tags:
        - /seasons
      summary: List of players on a specific matchday
      parameters:
        - $ref: "#/components/parameters/seasonIdPath"
        - $ref: "#/components/parameters/matchdayIdQuery"
      responses:
        "200":
          description: List of players
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/playerPreview"

  /seasons/{seasonId}/fixtures:
    get:
      tags:
        - /seasons
      summary: List of fixtures up to a specific matchday
      parameters:
        - $ref: "#/components/parameters/seasonIdPath"
        - $ref: "#/components/parameters/matchdayIdQuery"
      responses:
        "200":
          description: List of fixtures
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/fixture"

  /clubs/{clubId}/profile:
    get:
      tags:
        - /clubs
      summary: Get club profile details
      parameters:
        - $ref: "#/components/parameters/clubIdPath"
      responses:
        "200":
          description: The club profile details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/club"

  /clubs/{clubId}/summary:
    get:
      tags:
        - /clubs
      summary: Get club summary
      parameters:
        - $ref: "#/components/parameters/clubIdPath"
      responses:
        "200":
          description: The club summary
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/clubSummary"

  /clubs/{clubId}/players:
    get:
      tags:
        - /clubs
      summary: Get club players
      parameters:
        - $ref: "#/components/parameters/clubIdPath"
      responses:
        "200":
          description: The players of the club
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/playerPreview"

  /leagues:
    get:
      tags:
        - /leagues
      summary: Get all leagues a user is part of
      responses:
        "200":
          description: A list of leagues a user is part of
          content:
            application/json:
              schema:
                items:
                  allOf:
                    - $ref: "#/components/schemas/leagueWithId"
                    - properties:
                        rank:
                          type: integer
                          format: int64
                          description: The rank of the user
                        budget:
                          type: number
                          format: float
                          description: The budget of the user
                        squadValue:
                          type: number
                          format: float
                          description: The squad value of the user

    post:
      tags:
        - /leagues
      summary: Create a new league
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/league"
              properties:
                settings:
                  $ref: "#/components/schemas/leagueSettings"
      responses:
        "201":
          description: League successfully created.
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    format: int64
                    description: The ID of the league

  /leagues/{leagueId}:
    get:
      tags:
        - /leagues
      summary: Get a specific league
      parameters:
        - $ref: "#/components/parameters/leagueIdPath"
      responses:
        "200":
          description: League successfully returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/league"
                properties:
                  settings:
                    $ref: "#/components/schemas/leagueSettings"

    patch:
      tags:
        - /leagues
      summary: Update a league
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/league"
              properties:
                settings:
                  $ref: "#/components/schemas/leagueSettings"
      parameters:
        - $ref: "#/components/parameters/leagueIdPath"
      responses:
        "204":
          description: League successfully updated.

  /leagues/{leagueId}/users:
    get:
      tags:
        - /leagues/users
      summary: Get all users in a league
      parameters:
        - $ref: "#/components/parameters/leagueIdPath"
      responses:
        "200":
          description: A list of users in the league
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/userPreview"

    post:
      tags:
        - /leagues/users
      summary: Add user to specified league
      parameters:
        - $ref: "#/components/parameters/leagueIdPath"
      requestBody:
        description: The user to be added to the league
        required: true
        content:
          application/json:
            schema:
              properties:
                userId:
                  type: integer
                  format: int64
                  description: The ID of the user
      responses:
        "201":
          description: User successfully added to the league.

  /leagues/{leagueId}/users/{userId}:
    delete:
      tags:
        - /leagues/users
      summary: Remove user from specified league
      parameters:
        - $ref: "#/components/parameters/leagueIdPath"
        - $ref: "#/components/parameters/userIdPath"
      responses:
        "204":
          description: User successfully removed from the league.

  /leagues/{leagueId}/users/{userId}/profile:
    get:
      tags:
        - /leagues/users
      summary: Get user profile details for a chosen user in a chosen league
      parameters:
        - $ref: "#/components/parameters/leagueIdPath"
        - $ref: "#/components/parameters/userIdPath"
      responses:
        "200":
          description: The user profile details of the chosen user in the chosen league
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"

  /leagues/{leagueId}/users/{userId}/summary:
    get:
      tags:
        - /leagues/users
      summary: Get user summary for a chosen user in a chosen league
      parameters:
        - $ref: "#/components/parameters/leagueIdPath"
        - $ref: "#/components/parameters/userIdPath"
      responses:
        "200":
          description: The user summary of the chosen user in the chosen league
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userSummary"

  /leagues/{leagueId}/users/{userId}/points:
    get:
      tags:
        - /leagues/users
      summary: Get only the points of a chosen user in a chosen league
      parameters:
        - $ref: "#/components/parameters/leagueIdPath"
        - $ref: "#/components/parameters/userIdPath"
      responses:
        "200":
          description: The points of the user
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/userPoints"

  /leagues/{leagueId}/users/{userId}/market:
    get:
      tags:
        - /leagues/users
      summary: Get market details of a chosen user in a chosen league
      parameters:
        - $ref: "#/components/parameters/leagueIdPath"
        - $ref: "#/components/parameters/userIdPath"
      responses:
        "200":
          description: The market details of the user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/market"

  /leagues/{leagueId}/users/{userId}/lineup:
    get:
      tags:
        - /leagues/users
      summary: Get the lineup of a chosen user in a chosen league
      parameters:
        - $ref: "#/components/parameters/leagueIdPath"
        - $ref: "#/components/parameters/userIdPath"
      responses:
        "200":
          description: The lineup of the user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/lineup"

    patch:
      tags:
        - /leagues/users
      summary: Update lineup of a chosen user in a chosen league
      parameters:
        - $ref: "#/components/parameters/leagueIdPath"
        - $ref: "#/components/parameters/userIdPath"
      requestBody:
        description: The new lineup of the user
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/lineup"
      responses:
        "204":
          description: The lineup was updated successfully

  /leagues/{leagueId}/users/{userId}/squad:
    get:
      tags:
        - /leagues/users
      summary: Retrieve squad of a chosen user in a chosen league
      parameters:
        - $ref: "#/components/parameters/leagueIdPath"
        - $ref: "#/components/parameters/userIdPath"
      responses:
        "200":
          description: The squad of the user
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/playerPreview"

  /leagues/{leagueId}/players/{playerId}/profile:
    get:
      tags:
        - /leagues/players
      summary: Get player profile details
      parameters:
        - $ref: "#/components/parameters/leagueIdPath"
        - $ref: "#/components/parameters/playerIdPath"
      responses:
        "200":
          description: The player profile details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/playerProfile"

  /leagues/{leagueId}/players/{playerId}/summary:
    get:
      tags:
        - /leagues/players
      summary: Get player summary
      parameters:
        - $ref: "#/components/parameters/leagueIdPath"
        - $ref: "#/components/parameters/playerIdPath"
      responses:
        "200":
          description: The player summary
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/playerSummary"

  /leagues/{leagueId}/players/{playerId}/points:
    get:
      tags:
        - /leagues/players
      summary: Get player points
      parameters:
        - $ref: "#/components/parameters/leagueIdPath"
        - $ref: "#/components/parameters/playerIdPath"
      responses:
        "200":
          description: The points of the player
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/playerSeasonPoints"

  /leagues/{leagueId}/players/{playerId}/market:
    get:
      tags:
        - /leagues/players
      summary: Get player market details
      parameters:
        - $ref: "#/components/parameters/leagueIdPath"
        - $ref: "#/components/parameters/playerIdPath"
      responses:
        "200":
          description: The market details of the player
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/market"

  /leagues/{leagueId}/players/{playerId}/transfers:
    get:
      tags:
        - /leagues/players
      summary: Get all transfers of a chosen player in a chosen league
      parameters:
        - $ref: "#/components/parameters/leagueIdPath"
        - $ref: "#/components/parameters/playerIdPath"
      responses:
        "200":
          description: A list of transfers
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/transfer"

  /leagues/{leagueId}/transfers:
    get:
      tags:
        - /leagues/transfers
      summary: Get all transfers
      parameters:
        - $ref: "#/components/parameters/leagueIdPath"
        - name: status
          in: query
          schema:
            type: integer
            format: int64
            description: The status of the transfer (0 - active, 1 - completed)
      responses:
        "200":
          description: A list of transfers
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/transferPreview"

    post:
      tags:
        - /leagues/transfers
      summary: Add transfer
      parameters:
        - $ref: "#/components/parameters/leagueIdPath"
      requestBody:
        description: The details of the player and the price
        required: true
        content:
          application/json:
            schema:
              properties:
                playerId:
                  type: integer
                  format: int64
                  description: The ID of the player
                price:
                  type: number
                  format: float
                  description: The price of the player
      responses:
        "201":
          description: The transfer was added successfully
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    format: int64
                    description: The ID of the transfer

  /leagues/{leagueId}/transfers/{transferId}:
    patch:
      tags:
        - /leagues/transfers
      summary: Update transfer price
      parameters:
        - $ref: "#/components/parameters/leagueIdPath"
        - $ref: "#/components/parameters/transferIdPath"
      requestBody:
        description: The new price for the transfer
        required: true
        content:
          application/json:
            schema:
              properties:
                price:
                  type: number
                  format: float
                  description: The new price for the player
      responses:
        "204":
          description: The price was updated successfully

    delete:
      tags:
        - /leagues/transfers
      summary: Delete transfer
      parameters:
        - $ref: "#/components/parameters/leagueIdPath"
        - $ref: "#/components/parameters/transferIdPath"
      responses:
        "204":
          description: The transfer was deleted successfully

  /leagues/{leagueId}/transfers/{transferId}/offers:
    post:
      tags:
        - /leagues/transfers/offers
      summary: Place offer
      parameters:
        - $ref: "#/components/parameters/leagueIdPath"
        - $ref: "#/components/parameters/transferIdPath"
      requestBody:
        description: The details of the offer
        required: true
        content:
          application/json:
            schema:
              properties:
                price:
                  type: number
                  format: float
                  description: The price of the offer
      responses:
        "201":
          description: The offer was placed successfully
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    format: int64
                    description: The ID of the offer

  /leagues/{leagueId}/transfers/{transferId}/offers/{offerId}:
    patch:
      tags:
        - /leagues/transfers/offers
      summary: Update offer
      parameters:
        - $ref: "#/components/parameters/leagueIdPath"
        - $ref: "#/components/parameters/transferIdPath"
        - $ref: "#/components/parameters/offerIdPath"
      requestBody:
        description: The new price and status for the offer
        required: true
        content:
          application/json:
            schema:
              properties:
                price:
                  type: number
                  format: float
                  description: The new price for the offer
                status:
                  type: integer
                  format: int64
                  description: The status of the offer (0 - active, 1 - accepted, 2 - declined)
      responses:
        "204":
          description: The price was updated successfully

    delete:
      tags:
        - /leagues/transfers/offers
      summary: Delete offer
      parameters:
        - $ref: "#/components/parameters/leagueIdPath"
        - $ref: "#/components/parameters/transferIdPath"
        - $ref: "#/components/parameters/offerIdPath"
      responses:
        "204":
          description: The offer was deleted successfully

components:
  parameters:
    leagueIdPath:
      in: path
      name: leagueId
      required: true
      schema:
        $ref: "#/components/schemas/leagueId"

    transferIdPath:
      in: path
      name: transferId
      required: true
      schema:
        $ref: "#/components/schemas/transferId"

    playerIdPath:
      in: path
      name: playerId
      required: true
      schema:
        $ref: "#/components/schemas/playerId"

    offerIdPath:
      in: path
      name: offerId
      required: true
      schema:
        $ref: "#/components/schemas/offerId"

    userIdPath:
      in: path
      name: userId
      required: true
      schema:
        $ref: "#/components/schemas/userId"

    matchdayIdPath:
      in: path
      name: matchdayId
      required: true
      schema:
        $ref: "#/components/schemas/matchdayId"

    matchdayIdQuery:
      in: query
      name: matchdayId
      required: true
      schema:
        $ref: "#/components/schemas/matchdayId"

    clubIdPath:
      in: path
      name: clubId
      required: true
      schema:
        $ref: "#/components/schemas/clubId"

    seasonIdPath:
      in: path
      name: seasonId
      required: true
      schema:
        $ref: "#/components/schemas/seasonId"

    fixtureIdPath:
      in: path
      name: fixtureId
      required: true
      schema:
        $ref: "#/components/schemas/fixtureId"

  schemas:
    userId:
      properties:
        id:
          type: integer
          format: int64
          description: The ID of the user

    user:
      properties:
        name:
          type: string
          description: The name of the user
        email:
          type: string
          format: email
          description: The email of the user
        portraitUrl:
          type: string
          format: uri
          description: The URL of the user's portrait

    userWithId:
      allOf:
        - $ref: "#/components/schemas/userId"
        - $ref: "#/components/schemas/user"

    userSummary:
      properties:
        rank:
          type: integer
          format: int64
          description: The rank of the user
        matchdayVictories:
          type: integer
          format: int64
          description: The victories of the user
        pointsTotal:
          type: integer
          format: int64
          description: The total points of the user
        pointsAverage:
          type: number
          format: float
          description: The average points of the user
        transfers:
          type: integer
          format: int64
          description: The amount of transfers of the user
        squadValue:
          type: number
          format: float
          description: The value of the squad of the user
        transferProfit:
          type: number
          format: float
          description: The profit of the user

    userPoints:
      allOf:
        - $ref: "#/components/schemas/seasonId"
        - properties:
            pointsTotal:
              type: integer
              format: int64
              description: The total points of the user
            pointsAverage:
              type: number
              format: float
              description: The average points of the user
            matchDays:
              items:
                allOf:
                  - $ref: "#/components/schemas/matchdayId"
                  - properties:
                      dateTime:
                        type: string
                        format: date-time
                        description: The date and time of the match
                      points:
                        type: integer
                        format: int64
                        description: The points of the user

    lineup:
      items:
        type: integer
        format: int64
        description: The ID of the player

    playerSeasonPoints:
      allOf:
        - $ref: "#/components/schemas/seasonId"
        - properties:
            pointsTotal:
              type: integer
              format: int64
              description: The total points of the player
            pointsAverage:
              type: number
              format: float
              description: The average points of the player
            minutesPlayedAverage:
              type: integer
              format: int64
              description: The average minutes played by the player
            matchDays:
              items:
                $ref: "#/components/schemas/playerMatchDayPoints"

    playerMatchDayPoints:
      allOf:
        - $ref: "#/components/schemas/matchdayId"
        - properties:
            points:
              type: integer
              format: int64
              description: The points of the player
            minutesPlayed:
              type: integer
              format: int64
              description: The minutes played by the player
            goals:
              type: integer
              format: int64
              description: The goals of the player
            assists:
              type: integer
              format: int64
              description: The assists of the player
            redCards:
              type: integer
              format: int64
              description: The red cards of the player
            yellowCards:
              type: integer
              format: int64
              description: The yellow cards of the player
            startingLineup:
              type: boolean
              description: If the player was in the starting lineup
            fixture:
              $ref: "#/components/schemas/fixture"

    market:
      properties:
        purchaseDateTime:
          type: string
          format: date-time
          description: The date the player was purchased
        purchaseValue:
          type: number
          format: float
          description: The purchase value of the player
        history:
          items:
            properties:
              dateTime:
                type: string
                format: date-time
                description: The date and time of the market value
              value:
                type: number
                format: float
                description: The market value of the player

    transferId:
      properties:
        id:
          type: integer
          format: int64
          description: The ID of the transfer

    transfer:
      properties:
        price:
          type: number
          format: float
          description: The price of the transfer
        entryDateTime:
          type: string
          format: date-time
          description: The date the transfer was added
        exitDateTime:
          type: string
          format: date-time
          description: The date the transfer will be removed
        offers:
          items:
            $ref: "#/components/schemas/offerWithId"

    transferWithId:
      allOf:
        - $ref: "#/components/schemas/transferId"
        - $ref: "#/components/schemas/transfer"

    transferPreview:
      allOf:
        - $ref: "#/components/schemas/transferWithId"
        - properties:
            player:
              allOf:
                - $ref: "#/components/schemas/playerPreview"
                - properties:
                    user:
                      $ref: "#/components/schemas/userWithId"

    playerId:
      properties:
        id:
          type: integer
          format: int64
          description: The ID of the player

    player:
      properties:
        firstName:
          type: string
          description: The first name of the player
        lastName:
          type: string
          description: The last name of the player
        portraitUrl:
          type: string
          format: uri
          description: The URL of the player's portrait
        status:
          type: integer
          format: int64
          description: The status of the player (0 - fit, 1 - injured, 2 - stricken)
        position:
          type: integer
          format: int64
          description: The position of the player (0 - goalkeeper - gk, 1 - defense - def, 2 - midfield - mf, 3 - forward - fwd)
        number:
          type: integer
          format: int64
          description: The number of the player

    playerProfile:
      $ref: "#/components/schemas/player"
      properties:
        club:
          $ref: "#/components/schemas/clubWithId"
        user:
          $ref: "#/components/schemas/userWithId"

    playerWithId:
      allOf:
        - $ref: "#/components/schemas/playerId"
        - $ref: "#/components/schemas/player"

    playerSummary:
      properties:
        pointsTotal:
          type: integer
          format: int64
          description: The total points of the player
        pointsAverage:
          type: number
          format: float
          description: The average points of the player
        goals:
          type: integer
          format: int64
          description: The goals of the player
        assists:
          type: integer
          format: int64
          description: The assists of the player
        marketValue:
          type: number
          format: float
          description: The market value of the player
        marketValueTrend:
          type: integer
          format: int64
          description: The market value trend of the player (0 - stable, 1 - up, 2 - down)
        marketValueChange:
          type: number
          format: float
          description: The change of the market value of the player
        matchesPlayed:
          type: integer
          format: int64
          description: The matches played by the player
        matchesAvailable:
          type: integer
          format: int64
          description: The matches available for the player
        startingLineup:
          type: integer
          format: int64
          description: The amount of times the player was in the starting lineup
        minutesPlayedAverage:
          type: integer
          format: int64
          description: The average minutes played by the player
        status:
          type: integer
          format: int64
          description: The status of the player (0 - fit, 1 - injured, 2 - stricken)
        redCards:
          type: integer
          format: int64
          description: The red cards of the player
        yellowCards:
          type: integer
          format: int64
          description: The yellow cards of the player
        fixtures:
          items:
            $ref: "#/components/schemas/fixture"

    playerPreview:
      allOf:
        - $ref: "#/components/schemas/playerWithId"
        - properties:
            totalPoints:
              type: integer
              format: int64
              description: The total points of the player
            averagePoints:
              type: number
              format: float
              description: The average points of the player
            marketValue:
              type: number
              format: float
              description: The market value of the player
            marketValueTrend:
              type: integer
              format: int64
              description: The market value trend of the player (0 - stable, 1 - up, 2 - down)

    offerId:
      properties:
        id:
          type: integer
          format: int64
          description: The ID of the offer

    offer:
      properties:
        price:
          type: number
          format: float
          description: The price of the offer
        placedDateTime:
          type: string
          format: date-time
          description: The date the offer was placed
        status:
          type: integer
          format: int64
          description: The status of the offer (0 - active, 1 - accepted, 2 - declined)
        user:
          $ref: "#/components/schemas/userWithId"

    offerWithId:
      allOf:
        - $ref: "#/components/schemas/offerId"
        - $ref: "#/components/schemas/offer"

    userPreview:
      allOf:
        - $ref: "#/components/schemas/userWithId"
        - properties:
            totalPoints:
              type: integer
              format: int64
              description: The total points of the user
            averagePoints:
              type: number
              format: float
              description: The average points of the user
            squadValue:
              type: number
              format: float
              description: The value of the squad of the user

    club:
      properties:
        name:
          type: string
          description: The name of the club
        portraitUrl:
          type: string
          format: uri
          description: The URL of the club's portrait

    clubId:
      properties:
        id:
          type: integer
          format: int64
          description: The ID of the club

    clubWithId:
      allOf:
        - $ref: "#/components/schemas/clubId"
        - $ref: "#/components/schemas/club"

    clubWithIdAndScore:
      allOf:
        - $ref: "#/components/schemas/clubWithId"
        - properties:
            score:
              type: integer
              format: int64
              description: The score of the club

    clubPreview:
      allOf:
        - $ref: "#/components/schemas/clubWithId"
        - properties:
            matchesPlayed:
              type: integer
              format: int64
              description: The matches played by the club
            goalDifference:
              type: integer
              format: int64
              description: The goal difference of the club
            points:
              type: integer
              format: int64
              description: The amount of points for the club

    clubSummary:
      properties:
        rank:
          type: integer
          format: int64
          description: The rank of the club
        matchesPlayed:
          type: integer
          format: int64
          description: The matches played by the club
        goalDifference:
          type: integer
          format: int64
          description: The goal difference of the club
        points:
          type: integer
          format: int64
          description: The amount of points for the club

    fixtureId:
      properties:
        id:
          type: integer
          format: int64
          description: The ID of the fixture

    fixture: # TODO: bids
      properties:
        dateTime:
          type: string
          format: date-time
          description: The date and time of the match
        firstClub:
          $ref: "#/components/schemas/clubWithIdAndScore"
        secondClub:
          $ref: "#/components/schemas/clubWithIdAndScore"

    seasonId:
      properties:
        id:
          type: integer
          format: int64
          description: The ID of the season

    matchdayId:
      properties:
        id:
          type: integer
          format: int64
          description: The ID of the matchday

    leagueId:
      properties:
        id:
          type: integer
          format: int64
          description: The ID of the league

    league:
      properties:
        name:
          type: string
          description: The name of the League
        portraitUrl:
          type: string
          format: uri
          description: The URL of the League's portrait

    leagueWithId:
      allOf:
        - $ref: "#/components/schemas/leagueId"
        - $ref: "#/components/schemas/league"

    leagueSettings:
      properties:
        private:
          type: boolean
          description: If the League is private
        squadLimit:
          type: integer
          format: int64
          description: The squad limit of the League
        userLimit:
          type: integer
          format: int64
          description: The user limit of the League
        startingBudget:
          type: number
          format: float
          description: The starting budget of the League
        winterBreakReset:
          type: boolean
          description: If the league will be reset after the winter break

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []
